version: '3.8'

services:
  kafka:
    image: apache/kafka-native:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: DOCKER://0.0.0.0:9093,HOST://0.0.0.0:9092,CONTROLLER://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:9093,HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9093" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: kafbat/kafka-ui:main
    ports:
      - "8080:8080"  # Change the host port to 8081
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka
    networks:
      - mynetwork

  user-service:
    build:
      context: ./UserService
    ports:
      - "8050:8050"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - mynetwork

  marketplace-service:
    build:
      context: ./MarketplaceService
    ports:
      - "8070:8070"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - mynetwork

  post-service:
    build:
      context: ./PostService
    ports:
      - "8090:8090"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - mynetwork

  event-service:
    build:
      context: ./EventService
    ports:
      - "8060:8060"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - mynetwork

  frontend:
    build:
      context: ./Frontend  # Path to your frontend directory
    ports:
      - "5173:5173"  # Map port 5173 to the container's port 80 (for production use nginx)
    networks:
      - mynetwork


  feed-service:
    build:
      context: ./FeedService
    ports:
      - "8095:8095"
    depends_on:
      kafka:
        condition: service_healthy
      post-service:
        condition: service_started
      user-service:
        condition: service_started
    networks:
      - mynetwork

  notification-service:
    build:
      context: ./NotificationService
    ports:
      - "8085:8085"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - mynetwork


  gateway-service:
    build:
      context: ./GatewayService
    ports:
      - "8088:8080"  # External:Internal (frontend will talk to port 8088)
    depends_on:
      - kafka
      - user-service
      - post-service
      - event-service
      - marketplace-service
      - feed-service
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

