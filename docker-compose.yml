version: '3.8'

services:
  user-service:
    build:
      context: ./UserService
    ports:
      - "8050:8050"
    depends_on:
      - kafka

  marketplace-service:
    build:
      context: ./MarketplaceService
    ports:
      - "8070:8070"
    depends_on:
      - kafka

  event-service:
    build:
      context: ./EventService
    ports:
      - "8060:8060"
    depends_on:
      - kafka

  frontend:
    build:
      context: ./frontend  # Path to your frontend directory
    ports:
      - "5173:5173"  # Map port 5173 to the container's port 80 (for production use nginx)


  post-service:
    build:
      context: ./PostService
    ports:
      - "8090:8090"
    depends_on:
      - kafka

  feed-service:
    build:
      context: ./FeedService
    ports:
      - "8095:8095"
    depends_on:
      - kafka

  redis:
    image: redis:6.0.7
    container_name: redis
    restart: always
    volumes:
      - redis_volume_data:/data
    ports:
      - 6379:6379

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9091:9091"
      - "9093:9093"
    environment:
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: kafbat/kafka-ui:main
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka
volumes:
  redis_volume_data:
